-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mult is
port (
    ap_clk : in std_logic;
    ap_rst : in std_logic;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    mult_div : OUT STD_LOGIC;
    In1_V : IN STD_LOGIC_VECTOR (3 downto 0);
    In2_V : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of mult is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mult,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.340000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=13,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ret_V_fu_43_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_fu_43_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_fu_43_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_fu_43_p10 : STD_LOGIC_VECTOR (7 downto 0);


begin



    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
    out_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_43_p0) * unsigned(ret_V_fu_43_p1), 8));

    out_V_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            mult_div <= ap_const_logic_1;
        else 
            mult_div <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_43_p0 <= ret_V_fu_43_p00(4 - 1 downto 0);
    ret_V_fu_43_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(In2_V),8));
    ret_V_fu_43_p1 <= ret_V_fu_43_p10(4 - 1 downto 0);
    ret_V_fu_43_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(In1_V),8));
end behav;
